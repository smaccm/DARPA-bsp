/*
 * Copyright 2016, Data61
 * Commonwealth Scientific and Industrial Research Organisation (CSIRO)
 * ABN 41 687 119 230.
 *
 * This software may be distributed and modified according to the terms of
 * the BSD 2-Clause license. Note that NO WARRANTY is provided.
 * See "LICENSE_BSD2.txt" for details.
 *
 * @TAG(D61_BSD)
 */

import <std_connector.camkes>;

import "components/spi/spi.camkes";
import "components/canbus/canbus.camkes";
import "components/can/can.camkes";
import "components/gpio/gpio.camkes";
import "components/clkcar/clkcar.camkes";
import "components/tk1_uart/tk1_uart.camkes";
import "components/tk1_uart_test/tk1_uart_test.camkes";

component spibase {
    hardware;
    dataport Buf spi1_reg;
    emits DataAvailable spi1_int;
}

component clkcarbase {
    hardware;
    dataport Buf clkcar_reg;
}


component gpiobase {
    hardware;
    dataport Buf gpio1base;
    dataport Buf pinmuxaux;
    dataport Buf pinmuxmisc;

    emits IRQGroup5        irq_grp5_int;
    emits IRQGroup28       irq_grp28_int;
    emits IRQGroup31       irq_grp31_int;
    emits EXINT16_31       xint16_31_int;
}

/* UART hardware device component */
component tk1_uart_dev {
    hardware;
    dataport Buf tk1_uart_regs;
    emits uart_thr_rbr_irq tk1_uarta_irq;
    emits uart_thr_rbr_irq tk1_uartb_irq;
    emits uart_thr_rbr_irq tk1_uartc_irq;
    emits uart_thr_rbr_irq tk1_uartd_irq;
}

assembly {
    composition {

        /* hardware components */
        component spibase spibase_obj;
        component gpiobase gpiobase_obj;
        component clkcarbase clkcarbase_obj;
        component tk1_uart_dev tk1_uartbase_obj;
        connection seL4HardwareMMIO gpio_mem1 (from gpio_obj.gpio1base, to gpiobase_obj.gpio1base);
        connection seL4HardwareMMIO gpio_mem2 (from gpio_obj.pinmuxmisc, to gpiobase_obj.pinmuxmisc);
        connection seL4HardwareMMIO gpio_mem3 (from gpio_obj.pinmuxaux, to gpiobase_obj.pinmuxaux);


        /* software components */
        component spi spi_obj;
        component canbus    canbus_obj;
        component can       can_obj;
        component gpio      gpio_obj;
        component clkcar    clkcar_obj;
        /* UART component and tests */
        component tk1_uart  tk1_uart_obj;
        component tk1_uart_test test_fn;



        connection seL4HardwareMMIO spi1_mem (from spi_obj.spi1_reg, to spibase_obj.spi1_reg);
        connection seL4HardwareMMIO clkcar_mem (from clkcar_obj.clkcar_reg, to clkcarbase_obj.clkcar_reg);

        /* Can driver */

        connection seL4RPC can_spi(from can_obj.spi, to spi_obj.spi);
        connection seL4RPCCall clk_spi(from spi_obj.clkcar, to clkcar_obj.clkcar);

        connection seL4SharedData can_spi_channel (from can_obj.spi_can, to spi_obj.spi1_can);
        connection seL4RPCCall gpio_can(from gpio_obj.can, to can_obj.can);
        connection seL4Asynch gpio_can_int(from gpio_obj.CAN1Int, to can_obj.Int);


        connection seL4RPC gpio_cs(from spi_obj.gpio, to gpio_obj.gpio);


        /* CAN Application */
        connection seL4RPCCall canbus_can (from canbus_obj.can,  to can_obj.can);
        connection seL4SharedData canbus_can_channel(from canbus_obj.can_buf, to can_obj.can_buf);
        connection seL4Asynch txb0_ack(from can_obj.txb0_ack, to canbus_obj.txb0_ack);
        connection seL4Asynch txb1_ack(from can_obj.txb1_ack, to canbus_obj.txb1_ack);
        connection seL4Asynch txb2_ack(from can_obj.txb2_ack, to canbus_obj.txb2_ack);
        connection seL4SharedData canbus_spi_channel(from canbus_obj.spi1_client, to spi_obj.spi1_client);

        /* UART MMIO dataport */
        connection seL4HardwareMMIO tk1_uart_mmio (from tk1_uart_obj.tk1_uart_regs, to tk1_uartbase_obj.tk1_uart_regs);
        /* Test component's connections to the UART's component */
        connection seL4RPCCall test_fn_to_tk1_uart_uart_inf (from test_fn.tk1_uart, to tk1_uart_obj.tk1_uart);
        /* UART component's connection to the clock controller component */
        connection seL4RPCCall tk1_uart_to_clkcar_clkcar_inf (from tk1_uart_obj.clkcar, to clkcar_obj.clkcar);
        /* Test component's shmem dataport connections to UARTA dataport */
        connection seL4SharedData test_fn_to_tk1_uarta_tx (from test_fn.tk1_uarta_tx_buff, to tk1_uart_obj.tk1_uarta_tx_buff);
        connection seL4SharedData test_fn_to_tk1_uarta_rx (from test_fn.tk1_uarta_rx_buff, to tk1_uart_obj.tk1_uarta_rx_buff);
        /* Test component's shmem dataport connections to UARTB dataport */
        connection seL4SharedData test_fn_to_tk1_uartb_tx (from test_fn.tk1_uartb_tx_buff, to tk1_uart_obj.tk1_uartb_tx_buff);
        connection seL4SharedData test_fn_to_tk1_uartb_rx (from test_fn.tk1_uartb_rx_buff, to tk1_uart_obj.tk1_uartb_rx_buff);
        /* Test component's shmem dataport connections to UARTC dataport */
        connection seL4SharedData test_fn_to_tk1_uartc_tx (from test_fn.tk1_uartc_tx_buff, to tk1_uart_obj.tk1_uartc_tx_buff);
        connection seL4SharedData test_fn_to_tk1_uartc_rx (from test_fn.tk1_uartc_rx_buff, to tk1_uart_obj.tk1_uartc_rx_buff);
        /* We don't expose UARTD because that's what the kernel uses. */

        /* Interrupts */
        connection seL4HardwareInterrupt gpio_grp5_irq(from gpiobase_obj.irq_grp5_int, to gpio_obj.irq_grp5_int);
        connection seL4HardwareInterrupt spi1_irq(from spibase_obj.spi1_int, to spi_obj.spi1_int);
    }

    configuration {

        spibase_obj.spi1_reg_attributes       = "0x7000d000:0x1000";
        clkcarbase_obj.clkcar_reg_attributes  = "0x60006000:0x1000";
        spibase_obj.spi1_int_attributes       = 91;  /* SPI1  interrupt */
        gpiobase_obj.pinmuxmisc_attributes    = "0x70000000:0x1000";
        gpiobase_obj.pinmuxaux_attributes     = "0x70006000:0x1000";
        gpiobase_obj.gpio1base_attributes     = "0x6000D000:0x1000";
        gpiobase_obj.irq_grp5_int_attributes  = 87;

        /* UART hardware attributes .*/
        tk1_uartbase_obj.tk1_uart_regs_attributes = "0x70006000:0x1000";
        tk1_uartbase_obj.tk1_uarta_irq_attributes = 68;
        tk1_uartbase_obj.tk1_uartb_irq_attributes = 69;
        tk1_uartbase_obj.tk1_uartc_irq_attributes = 78;
        tk1_uartbase_obj.tk1_uartd_irq_attributes = 122;
    }
}
